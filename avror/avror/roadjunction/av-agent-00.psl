// ----------------------------------------------------------------------------
// Copyright (C) 2015 Louise A. Dennis and Michael Fisher
//
// This file is part of Gwendolen
// 
// Gwendolen is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3 of the License, or (at your option) any later version.
// 
// Gwendolen is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public
// License along with Gwendolen; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
// 
// To contact the authors:
// http://www.csc.liv.ac.uk/~lad
//
//----------------------------------------------------------------------------
// # AV-agent version 2020-21 for JSAN/AREA paper.
// Agent handles the Highway code rules for road junction: r170, r171, r172.
// This file contains the properties formally verified via AJPF.
// 
// see "AJPF-properties-backup-PSL-file.txt" for details and descriptions of the properties.
// including the sanity checking
// 
//-------------------------------------------------------------


p1: (B(av,sign(0,2)) & B(av,stopped)) -> [] G(av, enter_roadjunction_rules170_171)


p2: (B(av,sign(0,2)) & B(av,given_away) & B(av,stopped)) -> [] G(av, enter_roadjunction_rules170_172)


p3: [] (B(av,at_roadjunction(1,0)) -> <>(B(av,road_user(1,0)) || B(av,no_road_user(1,0))))


p4: [] (D(av,wait) -> (B(av,road_user(1,0)) & B(av,busy_roadjunction)))


p5: [] ((B(av,no_road_user(1,0)) & B(av,free_roadjunction)) -> <> (B(av,no_safe_gap(1,0) || B(av,safe_gap(1,0)) || B(av,new_safe_gap(1,0)) || B(av,try_again(1,0))))


p6: [] (D(av,check_safe_gap(1,0)) -> ~B(av,busy_roadjunction))


p7: [] (D(av,check_safe_gap(1,0)) -> ~B(av,road_user(1,0)))


p8: [] (D(av,check_safe_gap(1,0)) -> (B(av,no_road_user(1,0)) & B(av,free_roadjunction))) 


p9: [] (D(av,enter) -> ~B(av,busy_roadjunction))


p10: [] (D(av,enter) -> ~B(av,road_user(1,0)))


p11: [] (D(av,enter) -> ~B(av,try_again(1,0)))


p12: [] (D(av,enter) -> (B(av,safe_gap(1,0)) || B(av,new_safe_gap(1,0)) & B(av,no_road_user(1,0)))) 


//---------------------------------------------------

